{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","Cardlist","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAIaA,EAAM,SAAAC,GAAK,OACxB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAC1B,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCDLC,EAAW,SAAAR,GAAK,OACxB,qBAAKC,UAAU,YAAf,SACAD,EAAMS,SAASC,KACZ,SAAAN,GAAO,OACH,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCRlBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAYF,MCiCDG,E,kDA/Bb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXR,SAAW,GACXS,YAAY,IAJH,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC7EF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACf,SAASc,S,oBAEvC,WAAU,IAAD,SAEuBE,KAAKR,MAA5BR,EAFA,EAEAA,SAASS,EAFT,EAESA,YACVQ,EAAmBjB,EAASkB,QAAQ,SAAAvB,GAAO,OAC/CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAIlD,OACJ,sBAAK3B,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAgB,SAAAiB,GAAC,OAAI,EAAKN,SAAU,CAAEN,YAAcY,EAAEC,OAAOC,WACrG,cAAC,EAAD,CAAWvB,SAAYiB,W,GA1BPO,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2fb3b14f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\n\r\nexport const Card =props =>(\r\n<div className='card-container'>\r\n    <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n<h2>{props.monster.name}</h2>\r\n<p>{props.monster.email}</p>\r\n\r\n\r\n</div>\r\n);\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component'\r\n\r\n\r\n\r\n\r\nexport const Cardlist = props => (\r\n     <div className='card-list'>\r\n    {props.monsters.map(\r\n        monster => ( \r\n            <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n    </div>\r\n);\r\n   \r\n    \r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange})  =>(\r\n    <input\r\n    className='search'\r\n    type='search' \r\n    placeholder={placeholder} \r\n    onChange = {handleChange}\r\n      ></input>\r\n);","\nimport React ,{ Component }  from 'react';\nimport './App.css';\nimport { Cardlist } from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component'\n\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      monsters : [],\n      searchField:''\n\n    };\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json())\n    .then(users=>this.setState({monsters:users}));\n  }\n  render() {\n\n    const {monsters,searchField}= this.state;\n    const filteredMonsters = monsters.filter( monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n  \n \n    return (\n<div className='app'>\n <h1>Monsters Rolodex</h1>\n <SearchBox placeholder='search monsters' handleChange= { e => this.setState ({ searchField : e.target.value})} ></SearchBox>\n  <Cardlist  monsters = {filteredMonsters} />\n \n</div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}